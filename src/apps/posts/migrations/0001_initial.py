# Generated by Django 3.0.5 on 2020-04-27 13:04

import core.utils.utils
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=120, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('date', models.DateTimeField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('published', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('media_type', models.CharField(choices=[('post', 'Post'), ('album', 'Album'), ('story', 'Story')], default='story', max_length=30)),
                ('file', models.FileField(blank=True, null=True, upload_to=core.utils.utils.upload_location)),
                ('content', models.TextField(blank=True, null=True)),
                ('background', models.CharField(max_length=150, null=True)),
                ('feelings', models.CharField(blank=True, max_length=200, null=True)),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('time', models.TimeField(blank=True, null=True)),
                ('emoji', models.ImageField(blank=True, null=True, upload_to=core.utils.utils.upload_location)),
                ('filter', models.CharField(default='filter-normal', max_length=120)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('can_share', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_parent', models.BooleanField(default=False)),
                ('post_type', models.CharField(choices=[('user', 'User'), ('group', 'Group'), ('poll', 'Poll')], default='user', max_length=50)),
                ('content', models.TextField(blank=True, null=True)),
                ('mood', models.CharField(blank=True, help_text='What are you doing right now', max_length=400, null=True, verbose_name='Mood/Activity')),
                ('share_a_link', models.URLField(blank=True, null=True, verbose_name='Share a link')),
                ('location', models.CharField(blank=True, max_length=50, null=True)),
                ('filter', models.CharField(blank=True, default='filter-normal', max_length=30, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('share_type', models.CharField(blank=True, choices=[('no_share', 'Not a shared post'), ('feed_share', 'Share on your Feeds'), ('group_share', 'Share on a group'), ('page_share', 'Share on a page'), ('friend_share', 'Share on a friends Feeds')], default='no_share', max_length=60, null=True)),
                ('is_share', models.BooleanField(default=False, verbose_name='Is a shared post ?')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='posts', to='accounts.UserGroup')),
                ('liked', models.ManyToManyField(blank=True, related_name='liked_posts', to=settings.AUTH_USER_MODEL)),
                ('media', models.ManyToManyField(blank=True, related_name='media', to='posts.Media')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='posts.Post')),
                ('shared_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='shared_post', to='accounts.UserGroup')),
                ('shared_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='shared_post', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Post',
            },
        ),
        migrations.CreateModel(
            name='Story',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('media', models.ManyToManyField(blank=True, to='posts.Media')),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='accounts.UserProfile')),
            ],
            options={
                'verbose_name': 'Story',
                'verbose_name_plural': 'Stories',
            },
        ),
        migrations.CreateModel(
            name='Privacy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_public', models.BooleanField(default=True)),
                ('is_private', models.BooleanField(default=False)),
                ('friends', models.BooleanField(default=False)),
                ('exclude', models.ManyToManyField(blank=True, related_name='excluded_users', to=settings.AUTH_USER_MODEL)),
                ('include', models.ManyToManyField(blank=True, related_name='included_users', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PostTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='posts.Post')),
                ('tagged_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='post',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='tagged', through='posts.PostTag', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='post',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='posts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='PollChoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice', models.CharField(max_length=150)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='poll_choices', to='posts.Post')),
                ('votes', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MediaTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('media', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='posts.Media')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='media',
            name='tag',
            field=models.ManyToManyField(related_name='media_tags', through='posts.MediaTag', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='AlbumTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('album', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='posts.Album')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='album',
            name='photos',
            field=models.ManyToManyField(blank=True, to='posts.Media'),
        ),
        migrations.AddField(
            model_name='album',
            name='privacy',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='posts.Privacy'),
        ),
        migrations.AddField(
            model_name='album',
            name='tagged_users',
            field=models.ManyToManyField(through='posts.AlbumTag', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='album',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='albums', to=settings.AUTH_USER_MODEL),
        ),
    ]
